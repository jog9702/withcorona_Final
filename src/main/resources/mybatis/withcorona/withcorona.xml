<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.withcorona">

	<!-- 로그인시 db에 있는 정보와 비교하는 쿼리문 -->
	<select id="login" resultType="userVO" parameterType="userVO">
		select user_id, user_password, user_auth from user_info
		where user_id = #{userId} and user_password = #{userPassword}
	</select>

	<!-- 게시판 조회 쿼리문 -->
	<select id="qnaSelect" resultType="boardVO" parameterType="pagingVO">
			select * from (
			select rownum as rnum, level, board_id, board_parentno, board_title, board_desc, board_time, u.user_id
			from board_info b, user_info u
			where b.user_id = u.user_id
			start with board_parentno = 0
			connect by prior board_id = board_parentno
			order siblings by board_id desc
			) tmp
			where rnum between #{start} and #{end} 
	</select>
	
	<!-- 총 게시글 개수 출력 쿼리문 -->
	<select id="qnaTotal" resultType="int">
		select count(*) from board_info
	</select>
	
	<!-- 게시판 등록 쿼리문 -->
	<select id="qnaInsert" parameterType="boardVO">
		insert into board_info (board_id, user_id, board_parentno, board_title, board_desc, board_time)
		values(board_info_seq.nextval, #{userId}, #{boardParentno}, #{boardTitle}, #{boardDesc}, sysdate)
	</select>
		
	<!-- 게시판 상세 조회 쿼리문 -->
	<select id="qnaView" resultType="boardVO" parameterType="boardVO">
		select b.*, u.user_id
		from board_info b, user_info u
		where b.board_id = #{boardId} and b.user_id = u.user_id
	</select>
	
	<!-- 게시판 수정 쿼리문 -->
	<select id="qnaUpdate" resultType="boardVO" parameterType="boardVO">
		update board_info set
		board_title = #{boardTitle}, board_desc = #{boardDesc}
		where board_id = #{boardId}
	</select>
	
	<!-- 게시판 삭제 쿼리문 -->
	<select id="qnaDelete" resultType="boardVO">
		delete from board_info
		where board_id = #{boardId}
	</select>
	
	<!-- 댓글 등록 쿼리문 -->
	<select id="commentinsert" resultType="commentVO" parameterType="commentVO">
		insert into comment_info (comment_id, board_id, user_id, comment_desc, comment_time, comment_parentno)
		values(comment_info_seq.nextval, #{boardId}, #{userId}, #{commentDesc}, sysdate, #{commentParentno})
	</select>
	
	<!-- 댓글 수정 쿼리문 -->
	<select id="commentUpdate" resultType="int" parameterType="commentVO">
		update 
			comment_info 
		set
			comment_desc = #{commentDesc}
		where 
			comment_id = #{commentId}
	</select>
	
	<!-- 댓글 삭제 쿼리문 -->
	<select id="commentDelete" resultType="int" parameterType="commentVO">
		delete from comment_info
		where comment_id = #{commentId}
	</select>
</mapper>
